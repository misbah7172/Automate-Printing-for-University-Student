version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: autoprint_postgres
    environment:
      POSTGRES_DB: autoprint_db
      POSTGRES_USER: autoprint_user
      POSTGRES_PASSWORD: autoprint_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autoprint_user -d autoprint_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: autoprint_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: autoprint_backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://autoprint_user:autoprint_pass@postgres:5432/autoprint_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-development-jwt-secret
      - S3_BUCKET=autoprint-documents-dev
      - S3_KEY=your-aws-access-key
      - S3_SECRET=your-aws-secret-key
      - S3_REGION=us-east-1
      - RASPI_API_KEY=your-raspi-api-key
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../backend/src:/app/src
    restart: unless-stopped

  adminer:
    image: adminer:4.8.1
    container_name: autoprint_adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: autoprint_network